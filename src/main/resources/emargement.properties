emargement.datasource.driver-class-name=org.postgresql.Driver
emargement.datasource.jdbc-url=jdbc\:postgresql\://localhost\:5432/esupemargement
emargement.datasource.username=emargement
emargement.datasource.password=emargement
emargement.datasource.auto-commit=false

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.messages.encoding=ISO-8859-1
spring.messages.fallback-to-system-locale=false
spring.thymeleaf.mode=html
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#fix bug json
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#Cas
cas.url=https://cas.unimes.fr/cas
cas.service=https://carte.unimes.fr
cas.key=CAS_PROVIDER_LOCALHOST_9000

#ldap
spring.ldap.urls=ldap://gromit.unimes.fr/
spring.ldap.username=cn=root,dc=unimes,dc=fr
spring.ldap.password=iaounimes
ldap.people=ou=people,dc=unimes,dc=fr
spring.ldap.base=dc=unimes,dc=fr
ldap.userSearchFilter=(uid={0})
ldap.groups=ou=group,dc=unimes,dc=fr
#Superadmins --> filtre ldap
ldap.superAdminFilter=(|(uid=bquiller)(uid=ggalles)(uid=nathalie)(uid=knouriga))
# Filtre permettant la récupération de l'utilisateur ldap en fonction de l'uid renvoyé par CAS
ldap.userFilter=(uid=%s)

#Superadmins --> uid : liste de logins. Si vide, on utilise la requete memberOf pour les groupes
emargement.ruleSuperAdmin.memberOf=cn=dsi,ou=group,dc=unimes,dc=fr
emargement.ruleSuperAdmin.uid=

#smtp
spring.mail.host=smtp.unimes.fr
spring.mail.port=25
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

#apogee
emargement.datasource.apogee.jdbc-url=jdbc:oracle:thin:@scrat.unimes.fr:1521/gest
emargement.datasource.apogee.username=sap_bo
emargement.datasource.apogee.password=sap_bo
emargement.datasource.apogee.driver-class-name=oracle.jdbc.driver.OracleDriver
#batch
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=4
spring.jpa.properties.hibernate.order_inserts=true

emargement.wsrest.photo.prefixe = https://sgc.unimes.fr/wsrest/photo/
emargement.wsrest.photo.suffixe = /photo

#cron purge // Appelé tous les jours à 10H
log.cron.purge = 0 0 10 * * *
log.all.retention = 90

app.url =  https://carte.unimes.fr
app.nomDomaine = carte.unimes.fr
app.noreply = no-reply-esup-emargement

emargement.esupnfctag.link.jar = https://nfc-tag.unimes.fr/nfc-index/download-jar
emargement.esupnfctag.link.exe = https://sgc.unimes.fr/esup-sgc-client-installer.zip

emargement.ade.api.url = https://www-apps.unimes.fr/gateway-adehp/
emargement.ade.home.url = https://edt.unimes.fr/
emargement.ade.api.url.encrypted = 
#emargement.ade.api.url = https://ade.univ-ville.fr/jsp/webapi
emargement.ade.api.login = 
emargement.ade.api.password = 
#Ne doit pas être vide, '-' par défaut. Ex : emargement.ade.sync.cron = 0 56 15 * * *
emargement.ade.sync.cron =  -
emargement.ade.sync.range = 7

emargement.esupsignature.url = https://esup-signature.univ-ville.fr
emargement.esupsignature.workflow.id = 1250

emargement.datasource.apogee.query.composantes=SELECT FDOM_CODE as COD_CMP, FDOM_LIBELLE as LIB_CMP \
    from SCOLARITE.SCOL_FORMATION_DOMAINE \
    WHERE FDOM_VALIDITE='O' and FDOM_CODE_SISE is not null \
    ORDER BY FDOM_LIBELLE
emargement.datasource.apogee.query.elementsPedagogiques=SELECT DISTINCT mrsem.MSEM_KEY as COD_ETP, fdip.FGRA_CODE||FHAB_NIVEAU||' '||case when fdip.FDIP_ABREVIATION = FSPN_LIBELLE then FSPN_LIBELLE else fdip.FDIP_ABREVIATION || ' '||FSPN_LIBELLE end||' '||mpar.mpar_libelle||' semestre '||msem_ordre as LIB_ETP \
    FROM SCOLARITE.scol_formation_habilitation fhab, \
    SCOLARITE.scol_formation_specialisation fspn, \
    SCOLARITE.scol_formation_diplome fdip, \
    SCOLARITE.scol_maquette_parcours mpar, \
    SCOLARITE.scol_maquette_repartition_sem mrsem, \
    SCOLARITE.scol_maquette_semestre msem \
    WHERE msem.msem_ordre IN (((fhab.fhab_niveau * 2) - 1), (fhab.fhab_niveau * 2)) \
    AND mrsem.msem_key = msem.msem_key \
    AND fhab.fann_key = mrsem.fann_key \
    AND mpar.mpar_key = mrsem.mpar_key \
    AND fspn.fspn_key = mpar.fspn_key \
    AND fhab.fspn_key = fspn.fspn_key \
    AND fspn.fdip_code = fdip.fdip_code \
    AND fhab.FANN_KEY= ? \
    AND FDOM_CODE= ? \
    AND FGRA_CODE In ('L','M') \
    ORDER BY LIB_ETP
emargement.datasource.apogee.query.matieres=SELECT MEC_KEY as COD_ELP, MEC_CODE ||' '|| MEC_LIBELLE as LIB_ELP \
    FROM SCOLARITE.V_SCOL_MAQUETTE_EC \
    WHERE FANN_KEY = ? AND MSEM_KEY = ? \
    AND 'NE_PAS_UTILISER'!=? AND 'NE_PAS_UTILISER'!=? AND 'NE_PAS_UTILISER'!=? AND 'NE_PAS_UTILISER'!=? \
    ORDER BY MEC_CODE
emargement.datasource.apogee.query.countAutorisesEpreuve=SELECT Count(NO_INDIVIDU) \
    FROM SCOLARITE.V_SCOL_INSCRIPTION_EC \
    WHERE MEC_KEY= ? \
    AND 'NE_PAS_UTILISER'!=? \
    AND FANN_KEY = ?
emargement.datasource.apogee.query.autorisesEpreuve=SELECT vsiec.ETUD_NUMERO as COD_ETU, vsiec.NOM_USUEL as LIB_NOM_PAT_IND, ind.PRENOM_USUEL as LIB_PR1_IND, ind.D_NAISSANCE as DATE_NAI_IND \
    FROM SCOLARITE.V_SCOL_INSCRIPTION_EC vsiec, GRHUM.INDIVIDU_ULR ind \
    WHERE ind.NO_INDIVIDU=vsiec.NO_INDIVIDU \
    AND MEC_KEY= ? AND 'NE_PAS_UTILISER'!=? \
    AND FANN_KEY = ?
emargement.datasource.apogee.query.groupes=SELECT DISTINCT EENT_KEY as COD_EXT_GPE, EENT_LIBELLE || ' session '|| EENT_SESSION as LIB_GPE \
    FROM SCOLARITE.SCOL_EXAMEN_ENTETE WHERE FANN_KEY = ? AND MEC_KEY=?
emargement.datasource.apogee.query.countAutorisesEpreuveGroupe=SELECT Count(*) \
    FROM SCOLARITE.SCOL_INSCRIPTION_EXAMEN siex, SCOLARITE.SCOL_INSCRIPTION_ETUDIANT sie, GRHUM.INDIVIDU_ULR ind \
    WHERE ind.NO_INDIVIDU = sie.NO_INDIVIDU AND sie.IDIPL_NUMERO = siex.IDIPL_NUMERO \
    AND sie.FANN_KEY = ? AND  siex.EENT_KEY = ?
emargement.datasource.apogee.query.autorisesEpreuveGroupe=SELECT  sie.etud_numero as COD_ETU, ind.NOM_USUEL, ind.PRENOM_USUEL, ind.D_NAISSANCE \
    FROM SCOLARITE.SCOL_INSCRIPTION_EXAMEN siex, SCOLARITE.SCOL_INSCRIPTION_ETUDIANT sie, GRHUM.INDIVIDU_ULR ind \
    WHERE ind.NO_INDIVIDU = sie.NO_INDIVIDU AND sie.IDIPL_NUMERO = siex.IDIPL_NUMERO \
    AND sie.FANN_KEY = ? AND  siex.EENT_KEY = ?
emargement.datasource.apogee.query.autorisesEpreuveComposante=SELECT  sie.etud_numero as COD_ETU, ind.NOM_USUEL, ind.PRENOM_USUEL, ind.D_NAISSANCE \
    FROM SCOLARITE.SCOL_INSCRIPTION_EXAMEN siex, SCOLARITE.SCOL_INSCRIPTION_ETUDIANT sie, GRHUM.INDIVIDU_ULR ind \
    WHERE ind.NO_INDIVIDU = sie.NO_INDIVIDU AND sie.IDIPL_NUMERO = siex.IDIPL_NUMERO \
    AND sie.FANN_KEY = ? AND  sie.FDOM_CODE = ?
emargement.datasource.apogee.query.countAutorisesEpreuveComposante=SELECT Count(distinct sie.idipl_numero) \
    FROM SCOLARITE.SCOL_INSCRIPTION_EXAMEN siex, SCOLARITE.SCOL_INSCRIPTION_ETUDIANT sie, GRHUM.INDIVIDU_ULR ind \
    WHERE ind.NO_INDIVIDU = sie.NO_INDIVIDU AND sie.IDIPL_NUMERO = siex.IDIPL_NUMERO \
    AND sie.FANN_KEY = ? AND  sie.FDOM_CODE = ?
emargement.datasource.apogee.query.autorisesEpreuveDiplome=SELECT  sie.etud_numero as COD_ETU, ind.NOM_USUEL, ind.PRENOM_USUEL, ind.D_NAISSANCE \
    FROM SCOLARITE.SCOL_INSCRIPTION_EXAMEN siex, SCOLARITE.SCOL_INSCRIPTION_ETUDIANT sie, GRHUM.INDIVIDU_ULR ind, \
    SCOLARITE.SCOL_INSCRIPTION_SEMESTRE sis, SCOLARITE.SCOL_MAQUETTE_REPARTITION_SEM smrs \
    WHERE ind.NO_INDIVIDU = sie.NO_INDIVIDU AND sie.IDIPL_NUMERO = siex.IDIPL_NUMERO \
    AND sis.MRSEM_KEY=smrs.MRSEM_KEY AND sis.idipl_numero=sie.idipl_numero \
    AND smrs.MSEM_KEY = ? AND (1=1 OR 'NE_PAS_UTILISER'!=? AND 'NE_PAS_UTILISER'!=?) AND sie.FANN_KEY = ?
emargement.datasource.apogee.query.countAutorisesEpreuveDiplome=SELECT Count(distinct sie.idipl_numero) \
    FROM SCOLARITE.SCOL_INSCRIPTION_EXAMEN siex, SCOLARITE.SCOL_INSCRIPTION_ETUDIANT sie, GRHUM.INDIVIDU_ULR ind, \
    SCOLARITE.SCOL_INSCRIPTION_SEMESTRE sis, SCOLARITE.SCOL_MAQUETTE_REPARTITION_SEM smrs \
    WHERE ind.NO_INDIVIDU = sie.NO_INDIVIDU AND sie.IDIPL_NUMERO = siex.IDIPL_NUMERO \
    AND sis.MRSEM_KEY=smrs.MRSEM_KEY AND sis.idipl_numero=sie.idipl_numero \
    AND smrs.MSEM_KEY = ? AND (1=1 OR 'NE_PAS_UTILISER'!=? AND 'NE_PAS_UTILISER'!=?) AND sie.FANN_KEY = ?

emargement.plans.path=plans.json
